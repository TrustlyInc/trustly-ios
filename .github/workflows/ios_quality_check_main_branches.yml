# This workflow ensures that pull requests and commits to the main iOS branches are properly analyzed and tested.
# Workflow 'iOS Main Branches Quality Check' runs static code analysis, installs dependencies, and verifies code coverage.
# It helps maintain code quality and adherence to best practices before merging into the main branch.
# For furthuer information, check: https://trustly.atlassian.net/wiki/spaces/Engineering/pages/71335182337/iOS+Main+Branches+Quality+Check
name: iOS Main Branches Quality Check

on:
  push:
    branches:
      - main
      - DEV

env:
  SONAR_HOST_URL: "https://sonarqube.trustly.one"
  SONAR_PROJECT_KEY: "trustly-ios"
  SONAR_PROJECT_NAME: "trustly-ios"
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_SECRET }}

jobs:
  run_tests_and_sonar_analysis:
    runs-on: macOS-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          brew update
          brew install swiftlint
          brew install tailor
          sudo gem install -n /usr/local/bin xcpretty
          brew install lizard
          gem install cocoapods
          brew install fastlane
          pod install --project-directory=Example
          brew install sonar-scanner

      - name: Run SonarQube Analysis
        run: |
          echo "sonar.host.url=${{ env.SONAR_HOST_URL }}" >> sonar-project.properties
          echo "sonar.projectKey=${{ env.SONAR_PROJECT_KEY }}" >> sonar-project.properties
          echo "sonar.projectName=${{ env.SONAR_PROJECT_NAME }}" >> sonar-project.properties
          echo "sonar.login=${{ env.SONAR_TOKEN }}" >> sonar-project.properties
          echo "sonar.branch.name=${{ github.ref_name }}" >> sonar-project.properties

          chmod +x ./run-sonar-swift.sh
          ./run-sonar-swift.sh -v

      - name: Verify Coverage Report
        run: |
          if [ -f "sonar-reports/generic-coverage.xml" ]; then
            echo "Coverage report generated successfully: sonar-reports/generic-coverage.xml"
            cat sonar-reports/generic-coverage.xml
          else
            echo "Coverage report not found!" && exit 1
          fi
      - name: Publish new SDK version
        run: |
          bundle exec fastlane publish